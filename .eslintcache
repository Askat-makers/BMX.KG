[{"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\index.js":"1","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\App.js":"2","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\Routes.js":"3","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\contexts\\AuthContext.jsx":"4","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\contexts\\ProductsContext.jsx":"5","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\contexts\\AdminContext.jsx":"6","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\CheckOnAdmin.jsx":"7","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Authorization\\Authorization.jsx":"8","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\EditProduct.jsx":"9","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\Admin.jsx":"10","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Bottombasket\\BottomBasket.jsx":"11","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Cart\\Cart.jsx":"12","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Favorites\\Favorites.jsx":"13","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Catalog\\Catalog.jsx":"14","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\FboardPage\\FboardPage.jsx":"15","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Navibar\\Navibar.jsx":"16","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Home\\Home.jsx":"17","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\ProductDetails\\ProductDetails.jsx":"18","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Pagination\\Pagintaion.jsx":"19","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\BmxPage\\BmxPage.jsx":"20","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Registration\\Registration.jsx":"21","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\RollerPage\\RollerPage.jsx":"22","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Profile\\Profile.jsx":"23","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\AddProduct.jsx":"24","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\SamokatsPage\\SamokatsPage.jsx":"25","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\SkateboardPage\\Skateboard.jsx":"26","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\helpers\\Constants.jsx":"27","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\helpers\\CalcPrice.jsx":"28","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Footer\\Footer.jsx":"29","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\CatalogSection\\CatalogSection.jsx":"30","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Carousel\\Slider.jsx":"31","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Payment\\Payment.jsx":"32","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\VIdeoSlider\\VideoSlider.jsx":"33","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Section\\Section.jsx":"34"},{"size":174,"mtime":1607342648162,"results":"35","hashOfConfig":"36"},{"size":144,"mtime":1607345249628,"results":"37","hashOfConfig":"36"},{"size":3734,"mtime":1608624724592,"results":"38","hashOfConfig":"36"},{"size":1811,"mtime":1608869353112,"results":"39","hashOfConfig":"36"},{"size":13214,"mtime":1608871690805,"results":"40","hashOfConfig":"36"},{"size":2349,"mtime":1608869347557,"results":"41","hashOfConfig":"36"},{"size":914,"mtime":1608811521940,"results":"42","hashOfConfig":"36"},{"size":3053,"mtime":1608696896239,"results":"43","hashOfConfig":"36"},{"size":5762,"mtime":1608869320902,"results":"44","hashOfConfig":"36"},{"size":3160,"mtime":1608812587113,"results":"45","hashOfConfig":"36"},{"size":1970,"mtime":1608796291578,"results":"46","hashOfConfig":"36"},{"size":7190,"mtime":1608870437890,"results":"47","hashOfConfig":"36"},{"size":3895,"mtime":1608869324990,"results":"48","hashOfConfig":"36"},{"size":3117,"mtime":1608800715422,"results":"49","hashOfConfig":"36"},{"size":10167,"mtime":1608835234505,"results":"50","hashOfConfig":"36"},{"size":3826,"mtime":1608816190162,"results":"51","hashOfConfig":"36"},{"size":651,"mtime":1608606675754,"results":"52","hashOfConfig":"36"},{"size":13556,"mtime":1608834754107,"results":"53","hashOfConfig":"36"},{"size":765,"mtime":1608538538040,"results":"54","hashOfConfig":"36"},{"size":10138,"mtime":1608866878557,"results":"55","hashOfConfig":"36"},{"size":3652,"mtime":1608866636903,"results":"56","hashOfConfig":"36"},{"size":10086,"mtime":1608835075577,"results":"57","hashOfConfig":"36"},{"size":8335,"mtime":1608869302143,"results":"58","hashOfConfig":"36"},{"size":4819,"mtime":1608862725042,"results":"59","hashOfConfig":"36"},{"size":10187,"mtime":1608835040028,"results":"60","hashOfConfig":"36"},{"size":10203,"mtime":1608834913968,"results":"61","hashOfConfig":"36"},{"size":125,"mtime":1611037606210,"results":"62","hashOfConfig":"36"},{"size":262,"mtime":1608539295900,"results":"63","hashOfConfig":"36"},{"size":2018,"mtime":1607482757767,"results":"64","hashOfConfig":"36"},{"size":2799,"mtime":1608811195799,"results":"65","hashOfConfig":"36"},{"size":858,"mtime":1608834121686,"results":"66","hashOfConfig":"36"},{"size":2916,"mtime":1608869354504,"results":"67","hashOfConfig":"36"},{"size":1460,"mtime":1608606646506,"results":"68","hashOfConfig":"36"},{"size":1241,"mtime":1611037612990,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"nw6d7h",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"72"},"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\index.js",[],["156","157"],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\App.js",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\Routes.js",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\contexts\\AuthContext.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\contexts\\ProductsContext.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\contexts\\AdminContext.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\CheckOnAdmin.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Authorization\\Authorization.jsx",["158","159","160"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport Footer from '../Footer/Footer';\r\nimport Navibar from '../Navibar/Navibar';\r\n\r\nconst Authorization = (props) => {\r\n    const { users, authUser, getUsersData } = useContext(authContext)\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        getUsersData()\r\n    }, [])\r\n\r\n    function handleChange(e) {\r\n        let obj = {\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setUser(obj)\r\n    }\r\n\r\n\r\n    function handleClick() {\r\n        let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\r\n        let regexp2 = new RegExp(/(?=.{8,})/)\r\n        let result = regexp.test(user.login)\r\n        let result2 = regexp2.test(user.password)\r\n        if (result2 && result) {\r\n            let newArr = users.filter(item => (\r\n                item.login === user.login && item.password === user.password\r\n            ))\r\n            newArr.length ? authUser(newArr[0].id, props.history) : alert(\"Не правильный пароль или почта\")\r\n        }\r\n        if (!result && !result2) {\r\n            return alert(\"Введите корректную почту и пароль должен быть больше восьми символов\")\r\n        }\r\n        if (!result) {\r\n            return alert(\"Введите корректную почту\")\r\n        }\r\n        if (!result2) {\r\n            return alert(\"Пароль должен быть больше восьми символов\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div className=\"register-page\">\r\n                <div className=\"register-block\">\r\n                    <div className=\"register-block-only\">\r\n                        <p className=\"register-title\">Авторизация</p>\r\n                        <div>\r\n                            <p className=\"label-register\">Email</p>\r\n                            <input className=\"register-input\" placeholder=\"Введите ваш email\" required type=\"email\" name=\"login\" onChange={handleChange} />\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"label-register\">Пароль</p>\r\n                            <input className=\"register-input\" placeholder=\"Введите пароль\" required type=\"password\" name=\"password\" onChange={handleChange} />\r\n                        </div>\r\n                        <div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n                            <Button className=\"btn-register\" onClick={handleClick}>Войти</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Authorization;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\EditProduct.jsx",["161"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { adminContext } from '../../contexts/AdminContext';\r\n\r\nconst EditProduct = (props) => {\r\n\r\n    // check on admin\r\n    const [state, setState] = useState(false)\r\n    let checkStatus = JSON.parse(localStorage.getItem(\"login\"))\r\n    useEffect(() => {\r\n        if (checkStatus) setState(true)\r\n    }, [])\r\n\r\n    const { productToEdit, saveEditedProduct } = useContext(adminContext)\r\n    const [editedProduct, setEditedProduct] = useState(productToEdit)\r\n    \r\n    useEffect(() => {\r\n        setEditedProduct(productToEdit)\r\n    }, [productToEdit])\r\n\r\n    function updateProduct(e) {\r\n        let obj = {\r\n            ...editedProduct,\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setEditedProduct(obj)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {state ?\r\n                (\r\n                    <>\r\n                        {editedProduct ?\r\n                            (\r\n                                <div>\r\n                                    <div>\r\n                                        <h1 style={{textAlign: \"center\"}}>Редактировать товар</h1>\r\n                                        <div>\r\n                                            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                <div style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\", width: \"400px\" }}>\r\n                                                    <select style={{width: \"330px\"}} onChange={updateProduct} name=\"category\" id=\"\">\r\n                                                        <option value=\"\">Выберите категорию</option>\r\n                                                        <option value=\"bmx\">BMX</option>\r\n                                                        <option value=\"fboard\">Fboard</option>\r\n                                                        <option value=\"roller\">РОЛИКИ</option>\r\n                                                        <option value=\"skate\">СКЕЙТБОРД</option>\r\n                                                    </select>\r\n                                                    <p className=\"add-product-title\">Название</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.name} type=\"text\" placeholder=\"Название\" name=\"name\" />\r\n                                                    <p className=\"add-product-title\">Производитель</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.manufacturer} type=\"text\" placeholder=\"Поизводитель\" name=\"manufacturer\" />\r\n                                                    <p className=\"add-product-title\">Вес</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.weight} type=\"text\" placeholder=\"Вес\" name=\"weight\" />\r\n                                                    <p className=\"add-product-title\">Гарантия</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.warranty} type=\"text\" placeholder=\"Гарантия\" name=\"warranty\" />\r\n                                                    <p className=\"add-product-title\">Описание</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.description} type=\"text\" placeholder=\"Описание\" name=\"description\" />\r\n                                                    <p className=\"add-product-title\">Год</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.year} type=\"text\" placeholder=\"Год\" name=\"year\" />\r\n                                                    <p className=\"add-product-title\">Фото</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.image} type=\"text\" placeholder=\"Фото\" name=\"image\" />\r\n                                                    <p className=\"add-product-title\">Цена</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.price} type=\"text\" placeholder=\"Цена\" name=\"price\" />\r\n                                                    <p className=\"add-product-title\">Цвет</p>\r\n                                                    <input className=\"admin-edit-product\" onChange={updateProduct} value={editedProduct.color} type=\"text\" placeholder=\"Цвет\" name=\"color\" />\r\n                                                    <button onClick={() => saveEditedProduct(editedProduct, props.history)}>Save</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (\r\n                                <h1>Loading <Spinner /></h1>\r\n                            )}\r\n                    </>\r\n                )\r\n                :\r\n                (\r\n                    <h1>Авторизуйтесь как админ</h1>\r\n                )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditProduct;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\Admin.jsx",["162","163"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { adminContext } from '../../contexts/AdminContext';\r\nimport Navibar from '../Navibar/Navibar';\r\nimport './Admin.css'\r\n\r\nconst Admin = () => {\r\n\r\n    // check on admin\r\n    const [state, setState] = useState(false)\r\n    let checkStatus = JSON.parse(localStorage.getItem(\"login\"))\r\n    useEffect(() => {\r\n        if(checkStatus) setState(true)\r\n    }, [])\r\n\r\n    const { products, getProducts, getProductToEdit, delProduct } = useContext(adminContext)\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <Navibar/>\r\n        {state ? (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"admin-panel\">\r\n                    <div>\r\n                        <h1>ADMIN PANEL</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-panel\">\r\n                    <div><Link to=\"/addProduct\"><button>ADD PRODUCT</button></Link></div>\r\n                </div>\r\n                <table style={{ textAlign: 'center' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>~</th>\r\n                            <th>image</th>\r\n                            <th>name</th>\r\n                            <th>color</th>\r\n                            <th>price</th>\r\n                            <th>year</th>\r\n                            <th>Описание</th>\r\n                            <th>Производитель</th>\r\n                            <th>Вес</th>\r\n                            <th>~</th>\r\n                            <th>~</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map((item, index) => (\r\n                            <tr key={item.id} className=\"admin-every-product\">\r\n                                <td>{index + 1}</td>\r\n                                <td><a href={item.image}><img style={{ maxWidth: '100px' }} src={item.image} alt=\"\" /></a></td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.color}</td>\r\n                                <td>{item.price} сом</td>\r\n                                <td>{item.year} год</td>\r\n                                <td style={{ maxWidth: '250px', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}>{item.description}</td>\r\n                                <td>{item.manufacturer}</td>\r\n                                <td>{item.weight} гр</td>\r\n                                <td><button onClick={() => delProduct(item.id)}>DEL</button></td>\r\n                                <td><Link to=\"/editProduct\"><button onClick={() => getProductToEdit(item.id)}>EDIT</button></Link></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        ) : (\r\n            <h1>Авторизуйтесь как админ</h1>\r\n        )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Admin;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Bottombasket\\BottomBasket.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Cart\\Cart.jsx",["164"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Delete from '../../img/delete.png'\r\nimport { calcTotalPrice } from '../../helpers/CalcPrice'\r\nimport './Cart.css'\r\nimport { Modal, ModalBody } from 'react-bootstrap';\r\nimport PaymentForm from '../Payment/Payment';\r\nimport Navibar from '../Navibar/Navibar';\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst Cart = (props) => {\r\n    const {\r\n        getCart,\r\n        products,\r\n        cartData,\r\n        changeCountProducts,\r\n        clearCartAfterPay,\r\n        saveOrderInHistory,\r\n        getBmx,\r\n        deleteProductInCart\r\n    } = useContext(productsContext)\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleClose = () => setShow(false)\r\n\r\n    const [show1, setShow1] = useState(false)\r\n    const handleShow1 = () => setShow1(true)\r\n    const handleClose1 = () => {\r\n        setShow1(false)\r\n        getBmx()\r\n        props.history.push('/')\r\n        clearCartAfterPay()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCart()\r\n    }, [products])\r\n\r\n    function switcher(obj) {\r\n        if (!obj.cvc.trim() || !obj.expiry.trim() || !obj.name.trim() || !obj.number.trim()) {\r\n            return alert(\"Заполните поля\")\r\n        }\r\n        else {\r\n            handleClose()\r\n            saveOrderInHistory(JSON.parse(localStorage.getItem(\"cart\")))\r\n            handleShow1()\r\n            localStorage.setItem(\"cart\", null)\r\n        }\r\n    }\r\n\r\n    function handleChange(id, e) {\r\n        if(e.target.value <= 0) return\r\n        changeCountProducts(e.target.value, id)\r\n    }\r\n    console.log(cartData)\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            {!cartData ?\r\n                (\r\n                    <>\r\n                        <div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n                            <div style={{ height: \"200px\" }}>\r\n\r\n                            </div>\r\n                            <div style={{ textAlign: 'start', marginTop: \"20px\" }}>\r\n                                <h5 style={{ color: \"gray\" }}>Ваша корзина пуста</h5>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ) :\r\n                (\r\n                    cartData.totalPrice ?\r\n                        <div>\r\n                            <div className=\"container-cart-page\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th></th>\r\n                                            <th className=\"cart-nazavanie\">Название</th>\r\n                                            <th>Кол-во</th>\r\n                                            <th>Цена</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {cartData.products.map(item => (\r\n                                            <tr key={item.product.id}>\r\n                                                <td className=\"cart-image\">\r\n                                                    <img className=\"cart-image\" src={item.product.image} alt=\"\" />\r\n                                                </td>\r\n                                                <td className=\"cart-nazavanie\">\r\n                                                    {item.product.name}\r\n                                                </td>\r\n                                                <td className=\"cart-count\">\r\n                                                    <input\r\n                                                        style={{ width: '60px' }}\r\n                                                        onChange={(e) => handleChange(item.product.id, e)}\r\n                                                        min=\"1\"\r\n                                                        type=\"number\"\r\n                                                        value={item.count}\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"cart-price\">{item.subPrice} сом</td>\r\n                                                <td style={{ textAlign: \"center\" }}>\r\n                                                    <img src={Delete} alt=\"\" style={{ cursor: \"pointer\" }} onClick={() => deleteProductInCart(item)} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                                <div>\r\n                                    <h5>Итого: {calcTotalPrice(cartData.products)}</h5>\r\n                                    <button style={{backgroundColor: '#ff6410', borderColor: \"#ff6410\", color: \"#fff\"}} onClick={handleShow}>Оплатить</button>\r\n                                </div>\r\n                            </div>\r\n                            <Modal show={show} onHide={handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Оплатить картой</Modal.Title>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                    <PaymentForm switcher={switcher} />\r\n                                </ModalBody>\r\n                            </Modal>\r\n\r\n                            <Modal show={show1} onHide={handleClose1}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Чек</Modal.Title>\r\n                                </Modal.Header>\r\n                                <ModalBody>\r\n                                    <p>Ваш заказ принят. Ожидайте курьера!</p>\r\n                                </ModalBody>\r\n                                <button style={{backgroundColor: '#ff6410', borderColor: \"#ff6410\", color: \"#fff\"}} onClick={handleClose1}>OK</button>\r\n                            </Modal>\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n                                <div style={{ height: \"200px\" }}>\r\n\r\n                                </div>\r\n                                <div style={{ textAlign: 'start', marginTop: \"20px\" }}>\r\n                                    <h5 style={{ color: \"gray\" }}>Ваша корзина пуста</h5>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                )}\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cart;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Favorites\\Favorites.jsx",["165"],"import React, { useContext, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Navibar from '../Navibar/Navibar';\r\nimport '../Favorites/Favorites.css'\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst Favorites = () => {\r\n\r\n    const { favoritesData, getFavorites, addAndDeleteProductInCart, checkProductInCart } = useContext(productsContext)\r\n\r\n    useEffect(() => {\r\n        getFavorites()\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            {!favoritesData ? (\r\n                <>\r\n                    <div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n                        <div style={{ height: \"200px\" }}>\r\n\r\n                        </div>\r\n                        <div style={{ textAlign: 'start', marginTop: \"20px\" }}>\r\n                            <h5 style={{ color: \"gray\" }}>Список ваших избранных пуст</h5>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                    favoritesData.totalPrice ?\r\n                        <div>\r\n                            <Container>\r\n                                <div    >\r\n                                    {favoritesData.products.map((item) => (\r\n                                        <div key={item.product.id} style={{ display: \"flex\", padding: \"3%\", borderBottom: \"1px solid rgba(173, 170, 170, 0.747)\" }} className=\"favorite-cards\">\r\n                                            <img className=\"favorite-img\" style={{ width: \"25%\", borderRadius: \"2%\" }} src={item.product.image} alt=\"\" />\r\n                                            <div className=\"favorite-description\" style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"start\", marginLeft: \"30px\" }}>\r\n                                                <h5>{item.product.name}</h5>\r\n                                                <p>Описание: {item.product.description}</p>\r\n                                                <p>Цена: {item.product.price} сом</p>\r\n                                                {checkProductInCart(item.product.id) ?\r\n                                                    (\r\n                                                        <button style={{ backgroundColor: \"#1976d2\", borderColor: '#1976d2', color: '#fff' }} onClick={() => addAndDeleteProductInCart(item.product)}>В корзине</button>\r\n                                                    ) :\r\n                                                    (\r\n                                                        <button style={{ backgroundColor: \"#ff6410\", borderColor: '#ff6410', color: '#fff' }} onClick={() => addAndDeleteProductInCart(item.product)}>В корзину</button>\r\n                                                    )}\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </Container>\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n                                <div style={{ height: \"200px\" }}>\r\n\r\n                                </div>\r\n                                <div style={{ textAlign: 'start', marginTop: \"20px\" }}>\r\n                                    <h5 style={{ color: \"gray\" }}>Список ваших избранных пуст</h5>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                )}\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Favorites;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Catalog\\Catalog.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\FboardPage\\FboardPage.jsx",["166","167"],"import React, { useContext, useEffect, useState } from 'react';\r\n// import './BmxPage.css'\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Navibar from '../Navibar/Navibar'\r\nimport { Card } from 'react-bootstrap';\r\nimport CartBefore from '../../img/cartBefore.png'\r\nimport CartAfter from '../../img/cartAfter.png'\r\nimport StarBefore from '../../img/starBefore.png'\r\nimport StarAfter from '../../img/starAfter.png'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagintaion from '../Pagination/Pagintaion';\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst FboardPage = (props) => {\r\n    const {\r\n        getFboard,\r\n        currentPosts,\r\n        addAndDeleteProductInCart,\r\n        checkProductInCart,\r\n        addAndDeleteProductInFavorites,\r\n        checkProductInFavorites\r\n    } = useContext(productsContext)\r\n    useEffect(() => {\r\n        getFboard()\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search)\r\n\r\n    const [value, setValue] = useState('')\r\n    const [colorValue, setColorValue] = useState('')\r\n    const [yearValue, setYearValue] = useState('')\r\n    const [priceValue, setPriceValue] = useState('')\r\n    function resetFilter() {\r\n        props.history.push('/fboard')\r\n        setValue('')\r\n        setColorValue('')\r\n        setYearValue('')\r\n        setPriceValue('')\r\n        getFboard()\r\n    }\r\n\r\n    function fetchParams(params, value) {\r\n        if (value === \"all\") {\r\n            props.history.push('/fboard')\r\n            props.history.push(props.location.pathname.replace(params))\r\n            getFboard()\r\n            return\r\n        }\r\n        let search = new URLSearchParams(props.history.location.search)\r\n        search.set(params, value)\r\n        let url = `${props.location.pathname}?${search.toString()}`\r\n        props.history.push(url)\r\n        getFboard()\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div style={{ backgroundColor: \"#f9f9fa\", paddingBottom: \"30px\" }}>\r\n\r\n                <div className=\"container-bmx-list\">\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Живой поиск</p>\r\n                                <input value={value} type=\"text\" onChange=\r\n                                    {function handle(e) { fetchParams(\"q\", e.target.value); setValue(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bmx-products-list\">\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Цвета</p>\r\n                                <select value={colorValue} name=\"color\" id=\"\" onChange={(e) => fetchParams(\"color\", e.target.value)}>\r\n                                <option value=\"\">Выберите цвет</option>\r\n                                    <option value=\"black\">Черный</option>\r\n                                    <option value=\"white\">Белый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"purple\">Фиолетовый</option>\r\n                                    <option value=\"gray\">Серый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"green\">Зеленый</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Год</p>\r\n                                <select value={yearValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"year\", e.target.value)}>\r\n                                    <option value=\"\">Выберите год</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\">2021</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block parametr-price\">\r\n                                <p className=\"parametr-title\">Цена</p>\r\n                                <select value={priceValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"price_lte\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цену</option>\r\n                                    <option value=\"3000\">до 3000 сом</option>\r\n                                    <option value=\"5000\">до 5000 сом</option>\r\n                                    <option value=\"8000\">до 8000 сом</option>\r\n                                    <option value=\"10000\">до 10000 сом</option>\r\n                                    <option value=\"13000\">до 13000 сом</option>\r\n                                    <option value=\"15000\">до 15000 сом</option>\r\n                                    <option value=\"18000\">до 18000 сом</option>\r\n                                    <option value=\"20000\">до 20000 сом</option>\r\n                                    <option value=\"23000\">до 23000 сом</option>\r\n                                    <option value=\"25000\">до 25000 сом</option>\r\n                                    <option value=\"27000\">до 27000 сом</option>\r\n                                    <option value=\"30000\">до 30000 сом</option>\r\n                                    <option value=\"33000\">до 33000 сом</option>\r\n                                    <option value=\"35000\">до 35000 сом</option>\r\n                                    <option value=\"37000\">до 37000 сом</option>\r\n                                    <option value=\"40000\">до 40000 сом</option>\r\n                                    <option value=\"45000\">до 45000 сом</option>\r\n                                    <option value=\"50000\">до 50000 сом</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"reset-filter\" onClick={resetFilter}>Сбросить параметры</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"products-block\">\r\n                            {currentPosts.map(item => (\r\n                                <Card key={item.id} className=\"grow product-card\" style={{ width: '18rem' }}>\r\n                                    <Card.Img variant=\"top\" src={item.image} />\r\n                                    <Card.Body>\r\n                                        <Link to={`/product-details${item.id}`}>\r\n                                            <Card.Title>{item.name}</Card.Title>\r\n                                        </Link>\r\n                                        <div className=\"footer-block-product-card\">\r\n                                            <div>\r\n                                                <p className=\"card-price\"> Цена {item.price} <span style={{ textDecoration: 'underline' }}>c</span></p>\r\n                                            </div>\r\n                                            <div className=\"cart-favorite-block\">\r\n                                                <div>\r\n                                                    {checkProductInCart(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {checkProductInFavorites(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                        <Pagintaion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FboardPage;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Navibar\\Navibar.jsx",["168"],"import React, { useEffect, useState } from 'react';\r\nimport './Navibar.css'\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../img/logo.svg'\r\nimport logout from '../../img/logout.png'\r\n\r\nconst Navibar = () => {\r\n\r\n    const [state, setState] = useState(false)\r\n    let checkStatus = JSON.parse(localStorage.getItem(\"user\"))\r\n    useEffect(() => {\r\n        if (checkStatus) setState(true)\r\n    }, [])\r\n\r\n    function logout1(){\r\n        localStorage.setItem(\"user\", JSON.stringify(0))\r\n        setState(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Container>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-between\">\r\n                        <Nav>\r\n                            <Nav>\r\n                                <Link className=\"nav-link\" to=\"/\">\r\n                                    Главная\r\n                                </Link>\r\n                            </Nav>\r\n                            <Nav>\r\n                                <Link className=\"nav-link\" to=\"/bmx\">\r\n                                    BMX\r\n                                </Link>\r\n                            </Nav>\r\n                            <Nav>\r\n                                <Link className=\"nav-link\" to=\"/skate\">\r\n                                    Скейтборды\r\n                                </Link>\r\n                            </Nav>\r\n                            <Nav>\r\n                                <Link className=\"nav-link\" to=\"/samokats\">\r\n                                    Самокаты\r\n                                </Link>\r\n                            </Nav>\r\n                        </Nav>\r\n                        {state ?\r\n                            (\r\n                                <Nav>\r\n                                    <Link to=\"/profile\" className=\"nav-link\" role=\"button\">\r\n                                        Профиль\r\n                                    </Link>\r\n                                    <Link to=\"\" className=\"nav-link\" role=\"button\">\r\n                                        <img onClick={logout1} src={logout} alt=\"\"/>\r\n                                    </Link>\r\n                                </Nav>\r\n                            )\r\n                            :\r\n                            (\r\n                                <Nav>\r\n                                    <Link to=\"/auth\" className=\"nav-link\" role=\"button\">\r\n                                        Вход\r\n                                    </Link>\r\n                                    <Link to=\"/registration\" className=\"nav-link\" role=\"button\">\r\n                                        Регистрация\r\n                                    </Link>\r\n                                </Nav>\r\n                            )}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <div>\r\n                <div className=\"under-navbar-block\">\r\n                    <div className=\"under-navbar\">\r\n                        <div>\r\n                            <Link to=\"/\"><img className=\"navbar-img\" src={logo} alt=\"\" />Rider.Kg</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search-block\">\r\n                        <Link to=\"/catalog\">\r\n                            <button className=\"btn_go-catalog navibar-btn\">Каталог</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navibar;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Home\\Home.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\ProductDetails\\ProductDetails.jsx",["169","170"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Modal, ModalBody } from 'react-bootstrap';\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\nimport Footer from '../Footer/Footer';\r\nimport Navibar from '../Navibar/Navibar';\r\nimport './ProductDetails.css'\r\nimport UserAvatar from '../../img/userAvatar.svg'\r\nimport ArrowIcon from '../../img/arrowIcon.png'\r\nimport HeartIcon from '../../img/heart.png'\r\n\r\nconst ProductDetails = (props) => {\r\n    const {\r\n        getDetailsOfProduct,\r\n        productDetails,\r\n        addAndDeleteProductInCart,\r\n        checkProductInCart,\r\n        addAndDeleteProductInFavorites,\r\n        checkProductInFavorites,\r\n        sendComment,\r\n        sendCommentAnswer,\r\n        addAndDeleteLikes\r\n\r\n    } = useContext(productsContext)\r\n    useEffect(() => {\r\n        getDetailsOfProduct(props.match.params.id)\r\n    }, [])\r\n\r\n    // comments\r\n\r\n    useEffect(() => {\r\n        getDetailsOfProduct(props.match.params.id)\r\n    }, [])\r\n\r\n    const [value1, setValue1] = useState('')\r\n    const [value2, setValue2] = useState('')\r\n    const [value3, setValue3] = useState('')\r\n    const [value4, setValue4] = useState('')\r\n\r\n    const [newProduct, setNewProduct] = useState(productDetails)\r\n\r\n    useEffect(() => {\r\n        setNewProduct(productDetails)\r\n    }, [productDetails])\r\n\r\n    function handleSave(e) {\r\n        let obj = {\r\n            userName: value1,\r\n            userComment: value2,\r\n            answers: [],\r\n            id: Date.now()\r\n        }\r\n        if (!obj.userName.trim() || !obj.userComment.trim()) {\r\n            return alert(\"Заполните все поля\")\r\n        }\r\n        sendComment(newProduct, obj)\r\n        setValue1('')\r\n        setValue2('')\r\n    }\r\n\r\n    function handleSaveAnswer(e) {\r\n        let obj = {\r\n            userName: value3,\r\n            userComment: value4,\r\n            answers: [],\r\n            id: Date.now()\r\n        }\r\n        if (!obj.userName.trim() || !obj.userComment.trim()) {\r\n            return alert(\"Заполните все поля\")\r\n        }\r\n        sendCommentAnswer(newProduct, obj, commentId)\r\n        handleClose()\r\n        setValue3('')\r\n        setValue4('')\r\n    }\r\n\r\n    const [commentId, setCommentId] = useState(null)\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleShow = (id) => {\r\n        setCommentId(id)\r\n        setShow(true)\r\n    }\r\n    const handleClose = () => setShow(false)\r\n    //comments end\r\n    return (\r\n        <>\r\n            {productDetails ?\r\n                (\r\n                    <div>\r\n                        <Navibar />\r\n                        <Container>\r\n                            <div className=\"block-product-details\">\r\n                                <div>\r\n                                    <img className=\"product-details-img\" style={{ borderRadius: \"2%\", width: \"300px\" }} src={productDetails.image} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"details-description\">\r\n                                    <h3 className=\"h3\">{productDetails.name}</h3>\r\n                                    <p>{productDetails.price} сомов</p>\r\n                                    {checkProductInCart(productDetails.id) ?\r\n                                        (\r\n                                            <button style={{ backgroundColor: \"#1976d2\", borderColor: '#1976d2', color: '#fff' }} onClick={() => addAndDeleteProductInCart(productDetails)}>В корзине</button>\r\n                                        ) :\r\n                                        (\r\n                                            <button style={{ backgroundColor: \"#ff6410\", borderColor: '#ff6410', color: '#fff' }} onClick={() => addAndDeleteProductInCart(productDetails)}>В корзину</button>\r\n                                        )\r\n                                    }\r\n                                    {checkProductInFavorites(productDetails.id) ?\r\n                                        (\r\n                                            <button style={{ backgroundColor: checkProductInFavorites(productDetails.id) ? \"red\" : \"white\", marginLeft: \"15px\", color: checkProductInFavorites(productDetails.id) ? \"white\" : \"#573ba3\" }} onClick={() => addAndDeleteProductInFavorites(productDetails)} className=\"btn-add-to-wishlist\">В избранном</button>\r\n                                        )\r\n                                        :\r\n                                        (\r\n                                            <button onClick={() => addAndDeleteProductInFavorites(productDetails)} className=\"btn-add-to-wishlist btn-favorite-details\">В избранное</button>\r\n                                        )\r\n                                    }\r\n                                    <p>\r\n                                        Нравится {productDetails.likes}\r\n                                        <img style={{ cursor: \"pointer\" }} onClick={() => addAndDeleteLikes(productDetails)} src={HeartIcon} alt=\"\" />\r\n                                    </p>\r\n\r\n                                    <p className=\"detail-block-description\">{productDetails.description}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div >\r\n                                <h3 style={{ display: \"flex\", justifyContent: \"start\" }}>Отзывы</h3>\r\n                                <div>\r\n                                    <div>\r\n                                        {productDetails.comments.map((item, index) => (\r\n                                            <div key={`${index + 1}`}>\r\n                                                <div className=\"user-name\" style={{ display: \"flex\", alignItems: \"center\", textAlign: \"left\", padding: \"3%\", border: \"1px solid #d5d5d5\", marginBottom: \"20px\" }}>\r\n                                                    <div className=\"user\" style={{ width: \"100%\" }}>\r\n                                                        <div className=\"askat\" style={{ display: \"flex\", justifyContent: 'space-around', width: \"100%\" }}>\r\n                                                            <div>\r\n                                                                <div style={{ display: \"flex\", justifyContent: \"start\", alignItems: \"center\" }}>\r\n                                                                    <img className=\"user-icon\" style={{ width: \"5%\", marginRight: \"3%\" }} src={UserAvatar} alt=\"aaa\" />\r\n                                                                    <h5>{item.userName}</h5>\r\n                                                                </div>\r\n                                                                <div className=\"comment\" style={{ marginLeft: \" 8%\", width: \"80%\" }}>\r\n                                                                    <span className=\"userComment-span\">\r\n                                                                        {item.userComment}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <p style={{ cursor: \"pointer\" }} onClick={() => handleShow(item.id)}>Ответить</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {item.answers ?\r\n                                                            (\r\n                                                                item.answers.map(item => (\r\n                                                                    <div key={item.id}>\r\n                                                                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"flex-end\" }}>\r\n                                                                            <div>\r\n                                                                                <img src={ArrowIcon} alt=\"\" />\r\n                                                                            </div>\r\n                                                                            <div>\r\n                                                                                <div style={{ display: \"flex\", justifyContent: \"start\", alignItems: \"center\" }}>\r\n                                                                                    <img className=\"user-icon\" style={{ width: \"5%\", marginRight: \"3%\" }} src={UserAvatar} alt=\"aaa\" />\r\n                                                                                    <h5>{item.userName}</h5>\r\n                                                                                </div>\r\n                                                                                <div className=\"comment\" style={{ marginLeft: \" 8%\", width: \"80%\" }}>\r\n                                                                                    <span className=\"userComment-span\">\r\n                                                                                        {item.userComment}\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) :\r\n                                                            (\r\n                                                                null\r\n                                                            )}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <Modal show={show} onHide={handleClose}>\r\n                                                            <Modal.Header closeButton>\r\n                                                                <Modal.Title>Ответить пользователю {item.userName}</Modal.Title>\r\n                                                            </Modal.Header>\r\n                                                            <ModalBody>\r\n                                                                <input placeholder=\"Ваше имя\" onChange={(e) => setValue3(e.target.value)} type=\"text\" />\r\n                                                                <input placeholder=\"Ваш комментарий\" onChange={(e) => setValue4(e.target.value)} type=\"text\" />\r\n                                                                <button onClick={handleSaveAnswer}>Reply</button>\r\n                                                            </ModalBody>\r\n                                                        </Modal>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", flexDirection: \"column\", margin: \"30px\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                    <input\r\n                                        className=\"comment\"\r\n                                        style={{ border: \"none\", borderRadius: \"0%\", borderBottom: \"1px solid gray\", width: \"40%\" }}\r\n                                        value={value1}\r\n                                        onChange={(e) => setValue1(e.target.value)}\r\n                                        name=\"userName\"\r\n                                        placeholder=\"Ваше имя\"\r\n                                        type=\"text\"\r\n                                    />\r\n                                    <textarea\r\n                                        className=\"comment comment-area\"\r\n                                        style={{ width: \"40%\", height: \"200px\", margin: \"30px 0\" }}\r\n                                        value={value2}\r\n                                        onChange={(e) => setValue2(e.target.value)}\r\n                                        name=\"userComment\"\r\n                                        placeholder=\"Ваш отзыв\"\r\n                                        type=\"text\">\r\n                                    </textarea>\r\n                                    <button className=\"save-comment-btn\" onClick={handleSave}>Оставить отзыв</button>\r\n                                </div>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n                    <h2>Loading</h2>\r\n                )}\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Pagination\\Pagintaion.jsx",["171"],"import React, { useContext } from 'react';\r\nimport './Pagination.css'\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\n\r\nconst Pagintaion = () => {\r\n    const { postsPerPage, totalPosts, paginate } = useContext(productsContext)\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div aria-label=\"Page navigation\">\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(item => (\r\n                    <li className=\"page-item\" onClick={() => paginate(item)} key={item}><a className=\"page-link\" href=\"#\">{item}</a></li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagintaion;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\BmxPage\\BmxPage.jsx",["172","173"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './BmxPage.css'\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Navibar from '../Navibar/Navibar'\r\nimport { Card } from 'react-bootstrap';\r\nimport CartBefore from '../../img/cartBefore.png'\r\nimport CartAfter from '../../img/cartAfter.png'\r\nimport StarBefore from '../../img/starBefore.png'\r\nimport StarAfter from '../../img/starAfter.png'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagintaion from '../Pagination/Pagintaion';\r\nimport BottomBasket from '../Bottombasket/BottomBasket'\r\nimport Footer from '../Footer/Footer'\r\n\r\nconst BmxPage = (props) => {\r\n    const {\r\n        getBmx,\r\n        currentPosts,\r\n        addAndDeleteProductInCart,\r\n        checkProductInCart,\r\n        addAndDeleteProductInFavorites,\r\n        checkProductInFavorites\r\n    } = useContext(productsContext)\r\n    useEffect(() => {\r\n        getBmx()\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search)\r\n\r\n    const [value, setValue] = useState('')\r\n    const [colorValue, setColorValue] = useState('')\r\n    const [yearValue, setYearValue] = useState('')\r\n    const [priceValue, setPriceValue] = useState('')\r\n    function resetFilter() {\r\n        props.history.push('/bmx')\r\n        setValue('')\r\n        setColorValue('')\r\n        setYearValue('')\r\n        setPriceValue('')\r\n        getBmx()\r\n    }\r\n\r\n    function fetchParams(params, value) {\r\n        if (value === \"all\") {\r\n            props.history.push('/bmx')\r\n            props.history.push(props.location.pathname.replace(params))\r\n            getBmx()\r\n            return\r\n        }\r\n        let search = new URLSearchParams(props.history.location.search)\r\n        search.set(params, value)\r\n        let url = `${props.location.pathname}?${search.toString()}`\r\n        props.history.push(url)\r\n        getBmx()\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div style={{ backgroundColor: \"#f9f9fa\", paddingBottom: \"30px\" }}>\r\n\r\n                <div className=\"container-bmx-list\">\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Живой поиск</p>\r\n                                <input value={value} type=\"text\" onChange=\r\n                                    {function handle(e) { fetchParams(\"q\", e.target.value); setValue(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bmx-products-list\">\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Цвета</p>\r\n                                <select value={colorValue} name=\"color\" id=\"\" onChange={(e) => fetchParams(\"color\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цвет</option>\r\n                                    <option value=\"black\">Черный</option>\r\n                                    <option value=\"white\">Белый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"purple\">Фиолетовый</option>\r\n                                    <option value=\"gray\">Серый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"green\">Зеленый</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Год</p>\r\n                                <select value={yearValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"year\", e.target.value)}>\r\n                                    <option value=\"\">Выберите год</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\">2021</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block parametr-price\">\r\n                                <p className=\"parametr-title\">Цена</p>\r\n                                <select value={priceValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"price_lte\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цену</option>\r\n                                    <option value=\"3000\">до 3000 сом</option>\r\n                                    <option value=\"5000\">до 5000 сом</option>\r\n                                    <option value=\"8000\">до 8000 сом</option>\r\n                                    <option value=\"10000\">до 10000 сом</option>\r\n                                    <option value=\"13000\">до 13000 сом</option>\r\n                                    <option value=\"15000\">до 15000 сом</option>\r\n                                    <option value=\"18000\">до 18000 сом</option>\r\n                                    <option value=\"20000\">до 20000 сом</option>\r\n                                    <option value=\"23000\">до 23000 сом</option>\r\n                                    <option value=\"25000\">до 25000 сом</option>\r\n                                    <option value=\"27000\">до 27000 сом</option>\r\n                                    <option value=\"30000\">до 30000 сом</option>\r\n                                    <option value=\"33000\">до 33000 сом</option>\r\n                                    <option value=\"35000\">до 35000 сом</option>\r\n                                    <option value=\"37000\">до 37000 сом</option>\r\n                                    <option value=\"40000\">до 40000 сом</option>\r\n                                    <option value=\"45000\">до 45000 сом</option>\r\n                                    <option value=\"50000\">до 50000 сом</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"reset-filter\" onClick={resetFilter}>Сбросить параметры</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"products-block\">\r\n                            {currentPosts.map(item => (\r\n                                <Card key={item.id} className=\"grow product-card\" style={{ width: '18rem' }}>\r\n                                    <Card.Img variant=\"top\" src={item.image} />\r\n                                    <Card.Body>\r\n                                        <Link to={`/product-details${item.id}`} >\r\n                                            <Card.Title>{item.name}</Card.Title>\r\n                                        </Link>\r\n                                        <div className=\"footer-block-product-card\">\r\n                                            <div>\r\n                                                <p className=\"card-price\"> Цена {item.price} <span style={{ textDecoration: 'underline' }}>c</span></p>\r\n                                            </div>\r\n                                            <div className=\"cart-favorite-block\">\r\n                                                <div>\r\n                                                    {checkProductInCart(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {checkProductInFavorites(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                        <Pagintaion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BmxPage;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Registration\\Registration.jsx",["174","175","176"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport './Registration.css'\r\nimport Navibar from '../Navibar/Navibar'\r\nimport Footer from '../Footer/Footer'\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Registration = (props) => {\r\n    const { users, getUsersData, registrNewUser } = useContext(authContext)\r\n    const [newUser, setNewUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        getUsersData()\r\n    }, [])\r\n\r\n    const handleInpChange = (e) => {\r\n        let obj = {\r\n            ...newUser,\r\n            historyOrders: [],\r\n            [e.target.name]: e.target.value\r\n        }\r\n        setNewUser(obj)\r\n    }\r\n\r\n    function handleClick() {\r\n        let regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\r\n        let regexp2 = new RegExp(/(?=.{8,})/)\r\n        let result = regexp.test(newUser.login)\r\n        let result2 = regexp2.test(newUser.password)\r\n        if (result && result2) {\r\n            let newArr = users.filter(item => item.login === newUser.login)\r\n            return newArr.length ? alert(\"Аккаунт с таким email адресом уже существует\") : registrNewUser(newUser, props.history)\r\n        }\r\n        if(!result && !result2 && !newUser.name){\r\n            return alert(\"Заполните все поля\")\r\n        }\r\n        if(!result && !result2){\r\n            return alert(\"Введите корректную почту и пароль должен быть больше восьми символов\")\r\n        }\r\n        if(!result){\r\n            return alert(\"Введите корректную почту\")\r\n        }\r\n        if(!result2){\r\n            return alert(\"Пароль должен быть больше восьми символов\")\r\n        }\r\n        if(!newUser.name){\r\n            return alert(\"Введите ваше имя\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div className=\"register-page\">\r\n                <div className=\"register-block\">\r\n                    <div className=\"register-block-only\">\r\n                        <p className=\"register-title\">Регистрация</p>\r\n                        <div>\r\n                            <p className=\"label-register\">Email</p>\r\n                            <input className=\"register-input\" placeholder=\"Введите ваш email\" required type=\"email\" name=\"login\" onChange={handleInpChange} />\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"label-register\">Имя</p>\r\n                            <input className=\"register-input\" placeholder=\"Введите своё имя\" required type=\"text\" name=\"name\" onChange={handleInpChange} />\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"label-register\">Пароль</p>\r\n                            <input className=\"register-input\" placeholder=\"Введите пароль\" required type=\"password\" name=\"password\" onChange={handleInpChange} />\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: \"center\"}}>\r\n                            <Button className=\"btn-register\" onClick={handleClick}>Зарегистрироваться</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Registration;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\RollerPage\\RollerPage.jsx",["177","178"],"import React, { useContext, useEffect, useState } from 'react';\r\n// import './BmxPage.css'\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Navibar from '../Navibar/Navibar'\r\nimport { Card } from 'react-bootstrap';\r\nimport CartBefore from '../../img/cartBefore.png'\r\nimport CartAfter from '../../img/cartAfter.png'\r\nimport StarBefore from '../../img/starBefore.png'\r\nimport StarAfter from '../../img/starAfter.png'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagintaion from '../Pagination/Pagintaion';\r\nimport Footer from '../Footer/Footer';\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\n\r\nconst RollerPage = (props) => {\r\n    const {\r\n        getRollers,\r\n        currentPosts,\r\n        addAndDeleteProductInCart,\r\n        checkProductInCart,\r\n        addAndDeleteProductInFavorites,\r\n        checkProductInFavorites\r\n    } = useContext(productsContext)\r\n    useEffect(() => {\r\n        getRollers()\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search)\r\n\r\n    const [value, setValue] = useState('')\r\n    const [colorValue, setColorValue] = useState('')\r\n    const [yearValue, setYearValue] = useState('')\r\n    const [priceValue, setPriceValue] = useState('')\r\n    function resetFilter() {\r\n        props.history.push('/roller')\r\n        setValue('')\r\n        setColorValue('')\r\n        setYearValue('')\r\n        setPriceValue('')\r\n        getRollers()\r\n    }\r\n\r\n    function fetchParams(params, value) {\r\n        if (value === \"all\") {\r\n            props.history.push('/fboard')\r\n            props.history.push(props.location.pathname.replace(params))\r\n            getRollers()\r\n            return\r\n        }\r\n        let search = new URLSearchParams(props.history.location.search)\r\n        search.set(params, value)\r\n        let url = `${props.location.pathname}?${search.toString()}`\r\n        props.history.push(url)\r\n        getRollers()\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div style={{ backgroundColor: \"#f9f9fa\", paddingBottom: \"30px\" }}>\r\n                <div className=\"container-bmx-list\">\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Живой поиск</p>\r\n                                <input value={value} type=\"text\" onChange=\r\n                                    {function handle(e) { fetchParams(\"q\", e.target.value); setValue(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bmx-products-list\">\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Цвета</p>\r\n                                <select value={colorValue} name=\"color\" id=\"\" onChange={(e) => fetchParams(\"color\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цвет</option>\r\n                                    <option value=\"black\">Черный</option>\r\n                                    <option value=\"white\">Белый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"purple\">Фиолетовый</option>\r\n                                    <option value=\"gray\">Серый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"green\">Зеленый</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Год</p>\r\n                                <select value={yearValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"year\", e.target.value)}>\r\n                                    <option value=\"\">Выберите год</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\">2021</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block parametr-price\">\r\n                                <p className=\"parametr-title\">Цена</p>\r\n                                <select value={priceValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"price_lte\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цену</option>\r\n                                    <option value=\"3000\">до 3000 сом</option>\r\n                                    <option value=\"5000\">до 5000 сом</option>\r\n                                    <option value=\"8000\">до 8000 сом</option>\r\n                                    <option value=\"10000\">до 10000 сом</option>\r\n                                    <option value=\"13000\">до 13000 сом</option>\r\n                                    <option value=\"15000\">до 15000 сом</option>\r\n                                    <option value=\"18000\">до 18000 сом</option>\r\n                                    <option value=\"20000\">до 20000 сом</option>\r\n                                    <option value=\"23000\">до 23000 сом</option>\r\n                                    <option value=\"25000\">до 25000 сом</option>\r\n                                    <option value=\"27000\">до 27000 сом</option>\r\n                                    <option value=\"30000\">до 30000 сом</option>\r\n                                    <option value=\"33000\">до 33000 сом</option>\r\n                                    <option value=\"35000\">до 35000 сом</option>\r\n                                    <option value=\"37000\">до 37000 сом</option>\r\n                                    <option value=\"40000\">до 40000 сом</option>\r\n                                    <option value=\"45000\">до 45000 сом</option>\r\n                                    <option value=\"50000\">до 50000 сом</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"reset-filter\" onClick={resetFilter}>Сбросить параметры</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"products-block\">\r\n                            {currentPosts.map(item => (\r\n                                <Card key={item.id} className=\"grow product-card\" style={{ width: '18rem' }}>\r\n                                    <Card.Img variant=\"top\" src={item.image} />\r\n                                    <Card.Body>\r\n                                        <Link to={`/product-details${item.id}`}><Card.Title>{item.name}</Card.Title></Link>\r\n                                        <div className=\"footer-block-product-card\">\r\n                                            <div>\r\n                                                <p className=\"card-price\"> Цена {item.price} <span style={{ textDecoration: 'underline' }}>c</span></p>\r\n                                            </div>\r\n                                            <div className=\"cart-favorite-block\">\r\n                                                <div>\r\n                                                    {checkProductInCart(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {checkProductInFavorites(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                        <Pagintaion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RollerPage;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Profile\\Profile.jsx",["179"],"import printJS from 'print-js';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalBody } from 'react-bootstrap';\r\nimport { authContext } from '../../contexts/AuthContext';\r\nimport Navibar from '../Navibar/Navibar';\r\nimport \"./Profile.css\"\r\nimport Printer from '../../img/printer.png'\r\n\r\nconst Profile = () => {\r\n    const { getUserData, user } = useContext(authContext)\r\n    const [orderDetail, setOrderDetail] = useState({})\r\n\r\n    const userId = JSON.parse(localStorage.getItem(\"user\"))\r\n    useEffect(() => {\r\n        getUserData(userId)\r\n    }, [])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleClose = () => setShow(false)\r\n    function handleClick(obj) {\r\n        setOrderDetail(obj)\r\n        handleShow()\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {user ?\r\n                (<>\r\n                    <Navibar />\r\n                    <div>\r\n                        {/* <div>\r\n                            <h3>Это ваш личный профиль {user.name}</h3>\r\n                        </div> */}\r\n                        <div>\r\n                            <h4>История ваших заказов</h4>\r\n                            {user.historyOrders.length ? \r\n                            (\r\n                            <div>\r\n                                <table style={{ textAlign: 'center' }}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>~</th>\r\n                                            <th>Номер заказа</th>\r\n                                            <th>Дата заказа</th>\r\n                                            <th className=\"admin-profile-price\">Стоимость</th>\r\n                                            <th>~</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {user.historyOrders.map((item, index) => (\r\n                                            <tr key={item.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>№ {item.orderNumber}</td>\r\n                                                <td>{`${item.date.year}-${item.date.month}-${item.date.day} ${item.date.hours}:${item.date.minutes}:${item.date.seconds}`}</td>\r\n                                                <td className=\"admin-profile-price\">{item.totalPrice} сом</td>\r\n                                                <td>\r\n                                                    <Button onClick={() => handleClick(item)}>Детали заказа</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                    {orderDetail ?\r\n                                        (\r\n                                            <Modal show={show} onHide={handleClose}>\r\n                                                <Modal.Header closeButton>\r\n                                                    <Modal.Title>Детали заказа {orderDetail.orderNumber}</Modal.Title>\r\n                                                </Modal.Header>\r\n                                                <ModalBody>\r\n                                                    <table>\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th></th>\r\n                                                                <th>Название</th>\r\n                                                                <th>Кол-во</th>\r\n                                                                <th>Цена</th>\r\n                                                                <th></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        {orderDetail.products ?\r\n                                                            (\r\n                                                                < tbody >\r\n                                                                    {\r\n                                                                        orderDetail.products.map(item => (\r\n                                                                            <tr key={item.product.id}>\r\n                                                                                <td className=\"cart-image\">\r\n                                                                                    <img className=\"cart-image\" src={item.product.image} alt=\"\" />\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    {item.product.name}\r\n                                                                                </td>\r\n                                                                                <td style={{ textAlign: \"center\" }} className=\"cart-count\">{item.count}</td>\r\n                                                                                <td className=\"cart-price\">{item.subPrice} сом</td>\r\n                                                                            </tr>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </tbody>\r\n                                                            ) :\r\n                                                            (\r\n                                                                null\r\n                                                            )}\r\n                                                    </table>\r\n                                                    <p style={{ textAlign: \"end\" }}>Сумма: {orderDetail.totalPrice} сом</p>\r\n                                                    <button className=\"print-btn\" type=\"button\" onClick={() => printJS({\r\n                                                        printable: orderDetail.products,\r\n                                                        properties: [\r\n                                                            {field: 'product.name', displayName: 'Название'}, \r\n                                                            {field: 'product.category', displayName: \"Категория\"}, \r\n                                                            {field: 'count', displayName: \"Кол-во\"}, \r\n                                                            {field: \"subPrice\", displayName: \"Сумма\"}],\r\n                                                            header: '<h3>RIDER.KG</h3>',\r\n                                                        type: 'json'\r\n                                                    })}>\r\n                                                        <img src={Printer} alt=\"\"/>\r\n                                                    </button>\r\n                                                </ModalBody>\r\n                                            </Modal>\r\n                                        ) :\r\n                                        (\r\n                                            null\r\n                                        )}\r\n\r\n                                </table>\r\n                            </div>\r\n                            ) : \r\n                            (\r\n                                <p style={{textAlign: \"center\"}}>Ваша история заказов пуста</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                )\r\n                :\r\n                (null)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Admin\\AddProduct.jsx",["180"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { adminContext } from '../../contexts/AdminContext';\r\n\r\nconst AddProduct = () => {\r\n\r\n    // check on admin start\r\n    const [state, setState] = useState(false)\r\n    let checkStatus = JSON.parse(localStorage.getItem(\"login\"))\r\n    useEffect(() => {\r\n        if (checkStatus) setState(true)\r\n    }, [])\r\n    // check on admin end\r\n\r\n    const { addProduct } = useContext(adminContext)\r\n\r\n    const [newProduct, setNewProduct] = useState({})\r\n\r\n    function createNewProduct(e) {\r\n        let obj = {\r\n            ...newProduct,\r\n            [e.target.name]: e.target.value,\r\n            comments: [],\r\n            likes: 0\r\n        }\r\n        setNewProduct(obj)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {state ? (\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <h1 style={{textAlign: \"center\"}}>Добавить товар</h1>\r\n                            <div>\r\n                                <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                                    <div style={{display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\", width: \"200px\"}}>\r\n                                        <select onChange={createNewProduct} name=\"category\" id=\"\">\r\n                                            <option value=\"\">Выберите категорию</option>\r\n                                            <option value=\"bmx\">BMX</option>\r\n                                            <option value=\"fboard\">Fboard</option>\r\n                                            <option value=\"roller\">РОЛИКИ</option>\r\n                                            <option value=\"skate\">СКЕЙТБОРД</option>\r\n                                            <option value=\"samokat\">САМОКАТЫ</option>\r\n                                        </select>\r\n                                        <p className=\"add-product-title\">Название</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Название\" name=\"name\" />\r\n                                        <p className=\"add-product-title\">Производитель</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Поизводитель\" name=\"manufacturer\" />\r\n                                        <p className=\"add-product-title\">Вес</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Вес\" name=\"weight\" />\r\n                                        <p className=\"add-product-title\">Гарантия</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Гарантия\" name=\"warranty\" />\r\n                                        <p className=\"add-product-title\">Описание</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Описание\" name=\"description\" />\r\n                                        <p className=\"add-product-title\">Год</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Год\" name=\"year\" />\r\n                                        <p className=\"add-product-title\">Фото</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Фото\" name=\"image\" />\r\n                                        <p className=\"add-product-title\">Цена</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Цена\" name=\"price\" />\r\n                                        <p className=\"add-product-title\">Цвет</p>\r\n                                        <input className=\"inp-add-product\" onChange={createNewProduct} type=\"text\" placeholder=\"Цвет\" name=\"color\" />\r\n                                        <Link to=\"/admin\">\r\n                                            <button onClick={() => addProduct(newProduct)}>Add</button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                    <h1>Авторизуйтесь как админ</h1>\r\n                )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddProduct;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\SamokatsPage\\SamokatsPage.jsx",["181","182"],"import React, { useContext, useEffect, useState } from 'react';\r\n// import './BmxPage.css'\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Navibar from '../Navibar/Navibar'\r\nimport { Card } from 'react-bootstrap';\r\nimport CartBefore from '../../img/cartBefore.png'\r\nimport CartAfter from '../../img/cartAfter.png'\r\nimport StarBefore from '../../img/starBefore.png'\r\nimport StarAfter from '../../img/starAfter.png'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagintaion from '../Pagination/Pagintaion';\r\nimport Footer from '../Footer/Footer';\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\n\r\nconst SamokatsPage = (props) => {\r\n    const {\r\n        getSamokats,\r\n        currentPosts,\r\n        addAndDeleteProductInCart,\r\n        checkProductInCart,\r\n        addAndDeleteProductInFavorites,\r\n        checkProductInFavorites\r\n    } = useContext(productsContext)\r\n    useEffect(() => {\r\n        getSamokats()\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search)\r\n\r\n    const [value, setValue] = useState('')\r\n    const [colorValue, setColorValue] = useState('')\r\n    const [yearValue, setYearValue] = useState('')\r\n    const [priceValue, setPriceValue] = useState('')\r\n    function resetFilter() {\r\n        props.history.push('/samokats')\r\n        setValue('')\r\n        setColorValue('')\r\n        setYearValue('')\r\n        setPriceValue('')\r\n        getSamokats()\r\n    }\r\n\r\n    function fetchParams(params, value) {\r\n        if (value === \"all\") {\r\n            props.history.push('/fboard')\r\n            props.history.push(props.location.pathname.replace(params))\r\n            getSamokats()\r\n            return\r\n        }\r\n        let search = new URLSearchParams(props.history.location.search)\r\n        search.set(params, value)\r\n        let url = `${props.location.pathname}?${search.toString()}`\r\n        props.history.push(url)\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n        getSamokats()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div style={{ backgroundColor: \"#f9f9fa\", paddingBottom: \"30px\" }}>\r\n\r\n                <div className=\"container-bmx-list\">\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Живой поиск</p>\r\n                                <input value={value} type=\"text\" onChange=\r\n                                    {function handle(e) { fetchParams(\"q\", e.target.value); setValue(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bmx-products-list\">\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Цвета</p>\r\n                                <select value={colorValue} name=\"color\" id=\"\" onChange={(e) => fetchParams(\"color\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цвет</option>\r\n                                    <option value=\"black\">Черный</option>\r\n                                    <option value=\"white\">Белый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"purple\">Фиолетовый</option>\r\n                                    <option value=\"gray\">Серый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"green\">Зеленый</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Год</p>\r\n                                <select value={yearValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"year\", e.target.value)}>\r\n                                    <option value=\"\">Выберите год</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\">2021</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block parametr-price\">\r\n                                <p className=\"parametr-title\">Цена</p>\r\n                                <select value={priceValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"price_lte\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цену</option>\r\n                                    <option value=\"3000\">до 3000 сом</option>\r\n                                    <option value=\"5000\">до 5000 сом</option>\r\n                                    <option value=\"8000\">до 8000 сом</option>\r\n                                    <option value=\"10000\">до 10000 сом</option>\r\n                                    <option value=\"13000\">до 13000 сом</option>\r\n                                    <option value=\"15000\">до 15000 сом</option>\r\n                                    <option value=\"18000\">до 18000 сом</option>\r\n                                    <option value=\"20000\">до 20000 сом</option>\r\n                                    <option value=\"23000\">до 23000 сом</option>\r\n                                    <option value=\"25000\">до 25000 сом</option>\r\n                                    <option value=\"27000\">до 27000 сом</option>\r\n                                    <option value=\"30000\">до 30000 сом</option>\r\n                                    <option value=\"33000\">до 33000 сом</option>\r\n                                    <option value=\"35000\">до 35000 сом</option>\r\n                                    <option value=\"37000\">до 37000 сом</option>\r\n                                    <option value=\"40000\">до 40000 сом</option>\r\n                                    <option value=\"45000\">до 45000 сом</option>\r\n                                    <option value=\"50000\">до 50000 сом</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"reset-filter\" onClick={resetFilter}>Сбросить параметры</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"products-block\">\r\n                            {currentPosts.map(item => (\r\n                                <Card key={item.id} className=\"grow product-card\" style={{ width: '18rem' }}>\r\n                                    <Card.Img variant=\"top\" src={item.image} />\r\n                                    <Card.Body>\r\n                                        <Link to={`/product-details${item.id}`}>\r\n                                            <Card.Title>{item.name}</Card.Title>\r\n                                        </Link>\r\n                                        <div className=\"footer-block-product-card\">\r\n                                            <div>\r\n                                                <p className=\"card-price\"> Цена {item.price} <span style={{ textDecoration: 'underline' }}>c</span></p>\r\n                                            </div>\r\n                                            <div className=\"cart-favorite-block\">\r\n                                                <div>\r\n                                                    {checkProductInCart(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {checkProductInFavorites(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                        <Pagintaion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SamokatsPage;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\SkateboardPage\\Skateboard.jsx",["183","184"],"import React, { useContext, useEffect, useState } from 'react';\r\n// import './BmxPage.css'\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport Navibar from '../Navibar/Navibar'\r\nimport { Card } from 'react-bootstrap';\r\nimport CartBefore from '../../img/cartBefore.png'\r\nimport CartAfter from '../../img/cartAfter.png'\r\nimport StarBefore from '../../img/starBefore.png'\r\nimport StarAfter from '../../img/starAfter.png'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Pagintaion from '../Pagination/Pagintaion';\r\nimport Footer from '../Footer/Footer';\r\nimport BottomBasket from '../Bottombasket/BottomBasket';\r\n\r\nconst SkateboardPage = (props) => {\r\n    const {\r\n        getSkateboards,\r\n        currentPosts,\r\n        addAndDeleteProductInCart,\r\n        checkProductInCart,\r\n        addAndDeleteProductInFavorites,\r\n        checkProductInFavorites\r\n    } = useContext(productsContext)\r\n    useEffect(() => {\r\n        getSkateboards()\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n    const search = new URLSearchParams(history.location.search)\r\n\r\n    const [value, setValue] = useState('')\r\n    const [colorValue, setColorValue] = useState('')\r\n    const [yearValue, setYearValue] = useState('')\r\n    const [priceValue, setPriceValue] = useState('')\r\n    function resetFilter() {\r\n        props.history.push('/skate')\r\n        setValue('')\r\n        setColorValue('')\r\n        setYearValue('')\r\n        setPriceValue('')\r\n        getSkateboards()\r\n    }\r\n\r\n    function fetchParams(params, value) {\r\n        if (value === \"all\") {\r\n            props.history.push('/fboard')\r\n            props.history.push(props.location.pathname.replace(params))\r\n            getSkateboards()\r\n            return\r\n        }\r\n        let search = new URLSearchParams(props.history.location.search)\r\n        search.set(params, value)\r\n        let url = `${props.location.pathname}?${search.toString()}`\r\n        props.history.push(url)\r\n        getSkateboards()\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setColorValue(search.get(\"color\"))\r\n        setYearValue(search.get(\"year\"))\r\n        setPriceValue(search.get(\"price\"))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n            <div style={{ backgroundColor: \"#f9f9fa\", paddingBottom: \"30px\" }}>\r\n                <div className=\"container-bmx-list\">\r\n                    <div>\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Живой поиск</p>\r\n                                <input value={value} type=\"text\" onChange=\r\n                                    {function handle(e) { fetchParams(\"q\", e.target.value); setValue(e.target.value) }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bmx-products-list\">\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Цвета</p>\r\n                                <select value={colorValue} name=\"color\" id=\"\" onChange={(e) => fetchParams(\"color\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цвет</option>\r\n                                    <option value=\"black\">Черный</option>\r\n                                    <option value=\"white\">Белый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"purple\">Фиолетовый</option>\r\n                                    <option value=\"gray\">Серый</option>\r\n                                    <option value=\"blue\">Синий</option>\r\n                                    <option value=\"green\">Зеленый</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block\">\r\n                                <p className=\"parametr-title\">Год</p>\r\n                                <select value={yearValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"year\", e.target.value)}>\r\n                                    <option value=\"\">Выберите год</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\">2021</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"parametr-block parametr-price\">\r\n                                <p className=\"parametr-title\">Цена</p>\r\n                                <select value={priceValue} name=\"\" id=\"\" onChange={(e) => fetchParams(\"price_lte\", e.target.value)}>\r\n                                    <option value=\"\">Выберите цену</option>\r\n                                    <option value=\"3000\">до 3000 сом</option>\r\n                                    <option value=\"5000\">до 5000 сом</option>\r\n                                    <option value=\"8000\">до 8000 сом</option>\r\n                                    <option value=\"10000\">до 10000 сом</option>\r\n                                    <option value=\"13000\">до 13000 сом</option>\r\n                                    <option value=\"15000\">до 15000 сом</option>\r\n                                    <option value=\"18000\">до 18000 сом</option>\r\n                                    <option value=\"20000\">до 20000 сом</option>\r\n                                    <option value=\"23000\">до 23000 сом</option>\r\n                                    <option value=\"25000\">до 25000 сом</option>\r\n                                    <option value=\"27000\">до 27000 сом</option>\r\n                                    <option value=\"30000\">до 30000 сом</option>\r\n                                    <option value=\"33000\">до 33000 сом</option>\r\n                                    <option value=\"35000\">до 35000 сом</option>\r\n                                    <option value=\"37000\">до 37000 сом</option>\r\n                                    <option value=\"40000\">до 40000 сом</option>\r\n                                    <option value=\"45000\">до 45000 сом</option>\r\n                                    <option value=\"50000\">до 50000 сом</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"reset-filter\" onClick={resetFilter}>Сбросить параметры</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"products-block\">\r\n                            {currentPosts.map(item => (\r\n                                <Card key={item.id} className=\"grow product-card\" style={{ width: '18rem' }}>\r\n                                    <Card.Img variant=\"top\" src={item.image} />\r\n                                    <Card.Body>\r\n                                        <Link to={`/product-details${item.id}`}>\r\n                                            <Card.Title>{item.name}</Card.Title>\r\n                                        </Link>\r\n                                        <div className=\"footer-block-product-card\">\r\n                                            <div>\r\n                                                <p className=\"card-price\"> Цена {item.price} <span style={{ textDecoration: 'underline' }}>c</span></p>\r\n                                            </div>\r\n                                            <div className=\"cart-favorite-block\">\r\n                                                <div>\r\n                                                    {checkProductInCart(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartAfter} style={{ cursor: 'pointer' }} alt=\"a\" />\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInCart(item)} src={CartBefore} style={{ cursor: 'pointer' }} alt=\"a\" />\r\n                                                        )}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {checkProductInFavorites(item.id) ?\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarAfter} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <img onClick={() => addAndDeleteProductInFavorites(item)} src={StarBefore} style={{ cursor: 'pointer' }} alt=\"a\"/>\r\n                                                        )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                        <Pagintaion />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            <BottomBasket />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SkateboardPage;","C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\helpers\\Constants.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\helpers\\CalcPrice.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Footer\\Footer.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\CatalogSection\\CatalogSection.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Carousel\\Slider.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Payment\\Payment.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\VIdeoSlider\\VideoSlider.jsx",[],"C:\\Users\\user\\Desktop\\makers1\\2020\\Week-11\\final-project\\src\\containers\\Section\\Section.jsx",["185"],"import React, { useContext, useEffect } from 'react';\r\nimport { Card, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { productsContext } from '../../contexts/ProductsContext';\r\nimport './Section.css'\r\n\r\nconst Section = () => {\r\n    const { getLastProducts, products } = useContext(productsContext)\r\n\r\n    useEffect(() => {\r\n        getLastProducts()\r\n    }, [])\r\n\r\n    let length = products.length - 8\r\n    let arr = products.filter((item, index) => index >= length)\r\n\r\n    return (\r\n        <Container className=\"section\">\r\n            <h4>Новинки</h4>\r\n            <div className=\"section-card\">\r\n                {arr.length ? arr.map(item => (\r\n                    <Card key={item.id} className=\"grow\" style={{ width: '18rem' }}>\r\n                        <Link to={`/product-details${item.id}`}>\r\n                            <Card.Img variant=\"top\" src={item.image} />\r\n                            <Card.Body>\r\n                                <Card.Title>{item.name}</Card.Title>\r\n                            </Card.Body>\r\n                        </Link>\r\n                    </Card>\r\n                )) : null}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Section;",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":13,"column":8,"nodeType":"192","endLine":13,"endColumn":10,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":25,"column":43,"nodeType":"196","messageId":"197","endLine":25,"endColumn":44,"suggestions":"198"},{"ruleId":"194","severity":1,"message":"195","line":25,"column":68,"nodeType":"196","messageId":"197","endLine":25,"endColumn":69,"suggestions":"199"},{"ruleId":"190","severity":1,"message":"200","line":12,"column":8,"nodeType":"192","endLine":12,"endColumn":10,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"200","line":14,"column":8,"nodeType":"192","endLine":14,"endColumn":10,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"203","line":20,"column":8,"nodeType":"192","endLine":20,"endColumn":10,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"205","line":39,"column":8,"nodeType":"192","endLine":39,"endColumn":18,"suggestions":"206"},{"ruleId":"190","severity":1,"message":"207","line":15,"column":8,"nodeType":"192","endLine":15,"endColumn":10,"suggestions":"208"},{"ruleId":"190","severity":1,"message":"209","line":26,"column":8,"nodeType":"192","endLine":26,"endColumn":10,"suggestions":"210"},{"ruleId":"190","severity":1,"message":"211","line":66,"column":8,"nodeType":"192","endLine":66,"endColumn":10,"suggestions":"212"},{"ruleId":"190","severity":1,"message":"200","line":14,"column":8,"nodeType":"192","endLine":14,"endColumn":10,"suggestions":"213"},{"ruleId":"190","severity":1,"message":"214","line":27,"column":8,"nodeType":"192","endLine":27,"endColumn":10,"suggestions":"215"},{"ruleId":"190","severity":1,"message":"214","line":33,"column":8,"nodeType":"192","endLine":33,"endColumn":10,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":17,"column":89,"nodeType":"219","endLine":17,"endColumn":123},{"ruleId":"190","severity":1,"message":"220","line":26,"column":8,"nodeType":"192","endLine":26,"endColumn":10,"suggestions":"221"},{"ruleId":"190","severity":1,"message":"211","line":65,"column":8,"nodeType":"192","endLine":65,"endColumn":10,"suggestions":"222"},{"ruleId":"190","severity":1,"message":"191","line":14,"column":8,"nodeType":"192","endLine":14,"endColumn":10,"suggestions":"223"},{"ruleId":"194","severity":1,"message":"195","line":26,"column":43,"nodeType":"196","messageId":"197","endLine":26,"endColumn":44,"suggestions":"224"},{"ruleId":"194","severity":1,"message":"195","line":26,"column":68,"nodeType":"196","messageId":"197","endLine":26,"endColumn":69,"suggestions":"225"},{"ruleId":"190","severity":1,"message":"226","line":26,"column":8,"nodeType":"192","endLine":26,"endColumn":10,"suggestions":"227"},{"ruleId":"190","severity":1,"message":"211","line":66,"column":8,"nodeType":"192","endLine":66,"endColumn":10,"suggestions":"228"},{"ruleId":"190","severity":1,"message":"229","line":16,"column":8,"nodeType":"192","endLine":16,"endColumn":10,"suggestions":"230"},{"ruleId":"190","severity":1,"message":"200","line":12,"column":8,"nodeType":"192","endLine":12,"endColumn":10,"suggestions":"231"},{"ruleId":"190","severity":1,"message":"232","line":26,"column":8,"nodeType":"192","endLine":26,"endColumn":10,"suggestions":"233"},{"ruleId":"190","severity":1,"message":"211","line":66,"column":8,"nodeType":"192","endLine":66,"endColumn":10,"suggestions":"234"},{"ruleId":"190","severity":1,"message":"235","line":26,"column":8,"nodeType":"192","endLine":26,"endColumn":10,"suggestions":"236"},{"ruleId":"190","severity":1,"message":"211","line":66,"column":8,"nodeType":"192","endLine":66,"endColumn":10,"suggestions":"237"},{"ruleId":"190","severity":1,"message":"238","line":12,"column":8,"nodeType":"192","endLine":12,"endColumn":10,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersData'. Either include it or remove the dependency array.","ArrayExpression",["242"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["243","244"],["245","246"],"React Hook useEffect has a missing dependency: 'checkStatus'. Either include it or remove the dependency array.",["247"],["248"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.",["250"],"React Hook useEffect has a missing dependency: 'getFavorites'. Either include it or remove the dependency array.",["251"],"React Hook useEffect has a missing dependency: 'getFboard'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["253"],["254"],"React Hook useEffect has missing dependencies: 'getDetailsOfProduct' and 'props.match.params.id'. Either include them or remove the dependency array.",["255"],["256"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getBmx'. Either include it or remove the dependency array.",["257"],["258"],["259"],["260","261"],["262","263"],"React Hook useEffect has a missing dependency: 'getRollers'. Either include it or remove the dependency array.",["264"],["265"],"React Hook useEffect has missing dependencies: 'getUserData' and 'userId'. Either include them or remove the dependency array.",["266"],["267"],"React Hook useEffect has a missing dependency: 'getSamokats'. Either include it or remove the dependency array.",["268"],["269"],"React Hook useEffect has a missing dependency: 'getSkateboards'. Either include it or remove the dependency array.",["270"],["271"],"React Hook useEffect has a missing dependency: 'getLastProducts'. Either include it or remove the dependency array.",["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"messageId":"275","fix":"276","desc":"277"},{"messageId":"278","fix":"279","desc":"280"},{"messageId":"275","fix":"281","desc":"277"},{"messageId":"278","fix":"282","desc":"280"},{"desc":"283","fix":"284"},{"desc":"283","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"283","fix":"296"},{"desc":"297","fix":"298"},{"desc":"297","fix":"299"},{"desc":"300","fix":"301"},{"desc":"294","fix":"302"},{"desc":"273","fix":"303"},{"messageId":"275","fix":"304","desc":"277"},{"messageId":"278","fix":"305","desc":"280"},{"messageId":"275","fix":"306","desc":"277"},{"messageId":"278","fix":"307","desc":"280"},{"desc":"308","fix":"309"},{"desc":"294","fix":"310"},{"desc":"311","fix":"312"},{"desc":"283","fix":"313"},{"desc":"314","fix":"315"},{"desc":"294","fix":"316"},{"desc":"317","fix":"318"},{"desc":"294","fix":"319"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [getUsersData]",{"range":"322","text":"323"},"removeEscape",{"range":"324","text":"325"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"326","text":"327"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"328","text":"325"},{"range":"329","text":"327"},"Update the dependencies array to be: [checkStatus]",{"range":"330","text":"331"},{"range":"332","text":"331"},"Update the dependencies array to be: [getProducts]",{"range":"333","text":"334"},"Update the dependencies array to be: [getCart, products]",{"range":"335","text":"336"},"Update the dependencies array to be: [getFavorites]",{"range":"337","text":"338"},"Update the dependencies array to be: [getFboard]",{"range":"339","text":"340"},"Update the dependencies array to be: [search]",{"range":"341","text":"342"},{"range":"343","text":"331"},"Update the dependencies array to be: [getDetailsOfProduct, props.match.params.id]",{"range":"344","text":"345"},{"range":"346","text":"345"},"Update the dependencies array to be: [getBmx]",{"range":"347","text":"348"},{"range":"349","text":"342"},{"range":"350","text":"323"},{"range":"351","text":"325"},{"range":"352","text":"327"},{"range":"353","text":"325"},{"range":"354","text":"327"},"Update the dependencies array to be: [getRollers]",{"range":"355","text":"356"},{"range":"357","text":"342"},"Update the dependencies array to be: [getUserData, userId]",{"range":"358","text":"359"},{"range":"360","text":"331"},"Update the dependencies array to be: [getSamokats]",{"range":"361","text":"362"},{"range":"363","text":"342"},"Update the dependencies array to be: [getSkateboards]",{"range":"364","text":"365"},{"range":"366","text":"342"},"Update the dependencies array to be: [getLastProducts]",{"range":"367","text":"368"},[457,459],"[getUsersData]",[700,701],"",[700,700],"\\",[725,726],[725,725],[414,416],"[checkStatus]",[465,467],[621,623],"[getProducts]",[1192,1202],"[getCart, products]",[553,555],"[getFavorites]",[964,966],"[getFboard]",[2257,2259],"[search]",[471,473],[958,960],"[getDetailsOfProduct, props.match.params.id]",[1066,1068],[950,952],"[getBmx]",[2226,2228],[495,497],[780,781],[780,780],[805,806],[805,805],[966,968],"[getRollers]",[2262,2264],[594,596],"[getUserData, userId]",[412,414],[970,972],"[getSamokats]",[2271,2273],[978,980],"[getSkateboards]",[2285,2287],[397,399],"[getLastProducts]"]